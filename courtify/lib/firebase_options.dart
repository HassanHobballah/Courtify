// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart'; // Firebase core imported
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter/material.dart';
import 'firebase_options.dart'; // Firebase options imported/ Default [FirebaseOptions] for use with your Firebase apps.

///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyAdtqJGzUCVMrxvnxwJIk9BeLO7oIrZHZA',
    appId: '1:734060512200:web:6026967f333b401ab6b6fd',
    messagingSenderId: '734060512200',
    projectId: 'courtify-back',
    authDomain: 'courtify-back.firebaseapp.com',
    storageBucket: 'courtify-back.appspot.com',
    measurementId: 'G-5VKGM1W1M7',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAnuwkyx6xxYHINCXzoHtx1laJtLLm1rjs',
    appId: '1:734060512200:android:1b8a8fc43023b19bb6b6fd',
    messagingSenderId: '734060512200',
    projectId: 'courtify-back',
    storageBucket: 'courtify-back.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAqGMfI09KahPj4EeLFROMwfkfgmK2mDF8',
    appId: '1:734060512200:ios:72c5640c11b47bb6b6b6fd',
    messagingSenderId: '734060512200',
    projectId: 'courtify-back',
    storageBucket: 'courtify-back.appspot.com',
    iosBundleId: 'com.example.courtify',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyAqGMfI09KahPj4EeLFROMwfkfgmK2mDF8',
    appId: '1:734060512200:ios:3cbcd912dabbba44b6b6fd',
    messagingSenderId: '734060512200',
    projectId: 'courtify-back',
    storageBucket: 'courtify-back.appspot.com',
    iosBundleId: 'com.example.courtify.RunnerTests',
  );
}

// Add your Firebase initialization in the main function or the appropriate place
void main() async {
  WidgetsFlutterBinding.ensureInitialized(); // Ensure initialized if needed
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  // Your app initialization code goes here, like runApp(MyApp());
}
